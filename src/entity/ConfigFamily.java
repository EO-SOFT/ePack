package entity;
// Generated 6 fï¿½vr. 2016 21:43:55 by Hibernate Tools 3.6.0

import helper.Helper;
import java.util.List;
import org.hibernate.Query;
import helper.HQLHelper;
import hibernate.DAO;
import java.io.Serializable;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import org.hibernate.SQLQuery;
import org.hibernate.type.StandardBasicTypes;

/**
 * ConfigFamily generated by hbm2java
 */
@Entity
@Table(name = "config_family")
public class ConfigFamily extends DAO implements Serializable{
    
    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "config_family_id_seq")
    @SequenceGenerator(name = "config_family_id_seq", sequenceName = "config_family_id_seq", allocationSize = 1)
    private Integer id;
    
    @Column(name="harness_type")
    private String harnessType;
    
    @Column(name="customer")
    private String customer;
    
    /**
     * Which packaging mode to be selected in the packaging module
     * 1, 2 or 3
     */
    @Column(name = "packaging_mode")
    private String packagingMode;
    
    public ConfigFamily() {
    }

    public ConfigFamily(String harnessType) {
        this.harnessType = harnessType;
    }

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public String getHarnessType() {
        return harnessType;
    }

    public void setHarnessType(String harnessType) {
        this.harnessType = harnessType;
    }

    public void setCustomer(String customer) {
        this.customer = customer;
    }
    
    public String getCustomer() {
        return this.customer;
    }

    public String getPackagingMode() {
        return packagingMode;
    }

    public void setPackagingMode(String packagingMode) {
        this.packagingMode = packagingMode;
    }
    
    //######################################################################
    public List select() {
        Helper.startSession();
        Query query = Helper.sess.createQuery(HQLHelper.GET_ALL_FAMILIES);
        //UILog.info(query.getQueryString());
        Helper.sess.getTransaction().commit();
        return query.list();
    }
    
    /*
    public List<String[]> selectCustomers() {
        Helper.startSession();
        SQLQuery query = Helper.sess.createSQLQuery("SELECT DISTINCT customer FROM config_family");
        query.addScalar("customer", StandardBasicTypes.STRING);
        Helper.sess.getTransaction().commit();        
        return query.list();
    }*/
    
    public List<String[]> selectHarnessTypeByProject(String customer) {
        Helper.startSession();
        SQLQuery query = Helper.sess.createSQLQuery("SELECT DISTINCT harness_type FROM config_family WHERE customer = '"+customer+"'");
        query.addScalar("harness_type", StandardBasicTypes.STRING);
        Helper.sess.getTransaction().commit();        
        return query.list();
    }
    public List<String[]> selectHarnessType() {
        Helper.startSession();
        SQLQuery query = Helper.sess.createSQLQuery("SELECT DISTINCT harness_type FROM config_family");
        query.addScalar("harness_type", StandardBasicTypes.STRING);
        Helper.sess.getTransaction().commit();        
        return query.list();
    }
    
    /**
     * 
     * @return 
     */
    public List getFamilies(String harnessType) {
        Helper.startSession();
        Query query = Helper.sess.createQuery(HQLHelper.GET_ALL_FAMILIES);
        Helper.sess.getTransaction().commit();
        return query.list();
    }
    /**
     * Get Project object by harnessType
     * @return 
     */
    public ConfigFamily getProjectByHarnessType(String harnessType) {
        Helper.startSession();
        Query query = Helper.sess.createQuery(HQLHelper.GET_FAMILY_BY_HARNESSTYPE);
        query.setParameter("harnessType", harnessType);
        Helper.sess.getTransaction().commit();
        return (ConfigFamily)query.list().get(0);
    }

}
