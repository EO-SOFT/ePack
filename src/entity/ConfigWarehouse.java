package entity;
// Generated 6 fï¿½vr. 2016 21:43:55 by Hibernate Tools 3.6.0

import helper.HQLHelper;
import helper.Helper;
import hibernate.DAO;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import org.hibernate.Query;
import org.hibernate.SQLQuery;

/**
 * ConfigUcs generated by hbm2java
 */
@Entity
@Table(name = "config_warehouse")
public class ConfigWarehouse extends DAO implements java.io.Serializable {

    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "config_warehouse_id_seq")
    @SequenceGenerator(name = "config_warehouse_id_seq", sequenceName = "config_warehouse_id_seq", allocationSize = 1)
    private Integer id;    

    @Column(name = "warehouse")
    private String warehouse;        
    
    @Column(name = "description")
    private String description;
    
    @Column(name = "project")
    private String project;
    
    /**
     * PACKAGING
        FINISH_GOODS
        TRANSIT
        SCRAP
        BLOQUED';
     */
    @Column(name = "wh_type")
    private String whType;

    public ConfigWarehouse() {
    }

    public ConfigWarehouse(String warehouse, String description, String project, String type) {
        this.warehouse = warehouse;
        this.description = description;
        this.project = project;
        this.whType = type;
    }

    

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public String getWarehouse() {
        return warehouse;
    }

    public void setWarehouse(String warehouse) {
        this.warehouse = warehouse;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }    

    public String getProject() {
        return project;
    }

    public void setProject(String project) {
        this.project = project;
    }

    public String getWhType() {
        return whType;
    }

    public void setWhType(String whType) {
        this.whType = whType;
    }
    
    public List<String[]> selectAllWarehouses() {
        Helper.startSession();
        
        SQLQuery query = Helper.sess.createSQLQuery(HQLHelper.GET_All_WAREHOUSES);        
        
        Helper.sess.getTransaction().commit();
        return query.list();
    }
    
    public List<String[]> selectWarehousesByType(String wh_type) {
        Helper.startSession();
        
        Query query = Helper.sess.createQuery(HQLHelper.GET_WAREHOUSE_BY_TYPE);        
        
        query.setParameter("wh_type", wh_type);
        System.out.println("query wh_type "+query.getQueryString());
        Helper.sess.getTransaction().commit();
        return query.list();
    }
    
    public List selectWarehouse(String warehouse) {
        Helper.startSession();
        
        Query query = Helper.sess.createQuery(HQLHelper.GET_WAREHOUSE);
        query.setParameter("warehouse", warehouse);
        
        Helper.sess.getTransaction().commit();
        return query.list();
    }        
    public List selectByProject(String project) {
        Helper.startSession();
        
        Query query = Helper.sess.createQuery(HQLHelper.GET_WAREHOUSE_BY_PROJECT);
        query.setParameter("project", project);
        
        Helper.sess.getTransaction().commit();
        return query.list();
    }        

    public List selectByProjectAndType(String project, String type) {
        Helper.startSession();
        
        Query query = Helper.sess.createQuery(HQLHelper.GET_WAREHOUSE_BY_PROJECT_AND_TYPE);
        query.setParameter("project", project);
        query.setParameter("wh_type", type);
        
        Helper.sess.getTransaction().commit();
        return query.list();
    }
    
    public String getPackagingWh(String project) {
        ConfigWarehouse cw = new ConfigWarehouse();
        List result = cw.selectByProjectAndType(project, "PACKAGING");

        cw = (ConfigWarehouse) result.get(0);
        return (String) cw.getWarehouse();
    }
    
    
}
